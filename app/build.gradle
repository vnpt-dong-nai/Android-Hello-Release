apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
/////////////////////////////////////////////////////////////
boolean hasSignFilePath = rootProject.hasProperty("SIGN_PROPS")
String signFilePath = rootProject.property("SIGN_PROPS")
if (!hasSignFilePath) println "no file path"
println signFilePath


boolean signFileExists = new File(signFilePath).exists()
if (!signFileExists) println "sign file not exist"
else println "sign file EXISTS!"

boolean signConfigExists = hasSignFilePath && signFileExists
if(signConfigExists) {
    Properties props = new Properties()
    props.load(new FileInputStream(file("../" + signFilePath)))

    android {
        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keystore.alias']
                keyPassword props['keystore.alias.password']
            }
        }
    }
} else {
    println "sign config file not EXISTS!"
}
/////////////////////////////////////////////////////////////
android {
    if (hasSignFilePath && signFileExists) {
        Properties props = new Properties()
        props.load(new FileInputStream(file("../"+ signFilePath)))
        signingConfigs {
            signConfig {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keystore.alias']
                keyPassword props['keystore.alias.password']
            }
        }
    }

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId rootProject.PACKAGE
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    sourceSets {
        qa {
            java.srcDirs = ['src/debug/java']
        }
    }
    buildTypes {
        qa {
            testCoverageEnabled true
        }
        debug {
            testCoverageEnabled false
        }
        release {
            testCoverageEnabled false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "HelloRelease-${variant.name}-${variant.versionName}.apk"
                }
            }
            if(signConfigExists)
            {
                signingConfig signingConfigs.release
            }
        }
    }

    flavorDimensions "standard"
    productFlavors {
        production {
            dimension "standard"
            buildConfigField "boolean", "DEMO_FEATURE_CHANGE_COLOR_ON_TAP", "false"
        }
        beta {
            dimension "standard"
            applicationId project.PACKAGE + ".beta"
            buildConfigField "boolean", "DEMO_FEATURE_CHANGE_COLOR_ON_TAP", "true"
        }
        alpha {
            dimension "standard"
            applicationId project.PACKAGE + ".alpha"
            buildConfigField "boolean", "DEMO_FEATURE_CHANGE_COLOR_ON_TAP", "true"
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

